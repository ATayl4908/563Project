#NEXUS
[ID: 0920561744]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Aaegncc,
    2 Aaeg_a,
    3 Ador_a,
    4 Agamncc,
    5 Agam_a,
    6 Agam_b,
    7 Amel_c,
    8 Apis_a,
    9 Apis_b,
   10 Bmor_a,
   11 Bmor_c,
   12 C.gig_b,
   13 Clecncc,
   14 DmelNCC,
   15 Dmel,
   16 E.aff1,
   17 E.aff2,
   18 E.aff4,
   19 Hazt_a,
   20 Hmel_a,
   21 Lsal-like,
   22 N.vec_b,
   23 N.vec_a,
   24 Tcas_a,
   25 Tcas_b,
   26 Znev_a,
   27 Dmagb,
   28 Dmage,
   29 Dmagh,
   30 Aaeg_b,
   31 Ador_b,
   32 Amel_b,
   33 Apisncc,
   34 Apis_c,
   35 B.imp_a,
   36 B.imp_b,
   37 Bmor_b,
   38 C.gig_a,
   39 Clec_a,
   40 Clec_b,
   41 Cscuncc,
   42 Cscu_a,
   43 E.aff3,
   44 Hazt_b,
   45 Hmel_b,
   46 Lsalncc,
   47 Dmaga,
   48 Dmagc,
   49 Dmagd,
   50 Dmagf,
   51 Dmagg;
   tree tree_1 [p = 0.439, P = 0.439] = [&W 0.438826] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_2 [p = 0.152, P = 0.591] = [&W 0.152310] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_3 [p = 0.112, P = 0.703] = [&W 0.111735] (4,(14,((20,11),((26,13),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),(25,(35,(7,3))))))),1);
   tree tree_4 [p = 0.079, P = 0.782] = [&W 0.079276] (4,(14,((20,11),(((26,13),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2))))))))))),(25,(35,(7,3)))))),1);
   tree tree_5 [p = 0.074, P = 0.856] = [&W 0.073658] (4,(14,((20,11),((26,13),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),(15,((45,(37,10)),((30,5),(6,2)))))))))),(25,(35,(7,3))))))),1);
   tree tree_6 [p = 0.038, P = 0.894] = [&W 0.038077] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),((45,(37,10)),(15,((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_7 [p = 0.035, P = 0.929] = [&W 0.034956] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),(15,((45,(37,10)),((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_8 [p = 0.032, P = 0.961] = [&W 0.032459] (4,(14,((20,11),(((26,13),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),(15,((45,(37,10)),((30,5),(6,2))))))))))),(25,(35,(7,3)))))),1);
   tree tree_9 [p = 0.008, P = 0.969] = [&W 0.008115] (4,(14,((20,11),(((26,(33,13)),((((44,19),(39,(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_10 [p = 0.007, P = 0.976] = [&W 0.006866] (4,(14,((20,11),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),((26,13),(25,(35,(7,3))))))),1);
   tree tree_11 [p = 0.004, P = 0.980] = [&W 0.003745] (4,(14,((20,11),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2))))))))),((26,(33,13)),(25,(35,(7,3))))))),1);
   tree tree_12 [p = 0.004, P = 0.984] = [&W 0.003745] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(46,(21,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_13 [p = 0.004, P = 0.988] = [&W 0.003745] (4,(14,((20,11),(((26,13),(((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(((40,(36,(32,31))),24),(15,((45,(37,10)),((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_14 [p = 0.004, P = 0.991] = [&W 0.003745] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((18,17),(43,16)))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_15 [p = 0.002, P = 0.994] = [&W 0.002497] (4,(14,((20,11),((26,13),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(((40,(36,(32,31))),24),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3))))))),1);
   tree tree_16 [p = 0.002, P = 0.996] = [&W 0.001873] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),((46,21),((43,(18,17)),16)))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_17 [p = 0.002, P = 0.998] = [&W 0.001873] (4,(14,((20,11),(((26,(33,13)),((((44,19),(39,(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_18 [p = 0.001, P = 0.998] = [&W 0.000624] (4,(14,((20,11),((26,13),((((39,((44,19),(46,(21,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),((45,(37,10)),(15,((30,5),(6,2)))))))))),(25,(35,(7,3))))))),1);
   tree tree_19 [p = 0.001, P = 0.999] = [&W 0.000624] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((18,17),(43,16)))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),((9,(34,8)),(24,((40,(36,(32,31))),(15,((45,(37,10)),((30,5),(6,2)))))))))),(25,(35,(7,3)))))),1);
   tree tree_20 [p = 0.001, P = 0.999] = [&W 0.000624] (4,(14,((20,11),(((26,(33,13)),(((39,((44,19),(21,(46,((18,17),(43,16)))))),((42,41),((38,(23,22)),12))),(49,(((((51,50),29),(47,28)),(48,27)),((24,((36,(32,31)),(40,(9,(34,8))))),(15,((45,(37,10)),((30,5),(6,2))))))))),(25,(35,(7,3)))))),1);
   tree tree_21 [p = 0.001, P = 1.000] = [&W 0.000624] (4,(14,((20,11),((((39,((44,19),(21,(46,((43,(18,17)),16))))),((42,41),((38,(23,22)),12))),((49,((((51,50),29),(47,28)),(48,27))),(33,((9,(34,8)),(24,((40,(36,(32,31))),(15,((45,(37,10)),((30,5),(6,2)))))))))),((26,13),(25,(35,(7,3))))))),1);
end;
